{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhanush\\\\Desktop\\\\mern_application\\\\frontend\\\\src\\\\pages\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport CreateEmployee from '../components/CreateEmployee';\nimport Search from '../components/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Assuming your root element has this ID\n\nconst EmployeeList = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/employees');\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    }\n  };\n  const handleOpenModal = () => {\n    setModalIsOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n    fetchEmployees(); // Refetch employees after closing the modal to update the list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"fixed top-[8%] left-5\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpenModal,\n        class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          \"stroke-width\": \"2\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M5 12h14m-7-7v14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative py-4 ml-[84%]\",\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: handleCloseModal,\n      contentLabel: \"Create Employee\",\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(CreateEmployee, {\n        closeModal: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full table-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-800 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: employee.id % 2 === 0 ? \"bg-white\" : \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: employee.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"pyCUKTW1LhCD+pzceI1do3lnUJ8=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","CreateEmployee","Search","jsxDEV","_jsxDEV","setAppElement","EmployeeList","_s","modalIsOpen","setModalIsOpen","employees","setEmployees","fetchEmployees","response","get","data","error","console","handleOpenModal","handleCloseModal","children","class","onClick","xmlns","fill","viewBox","stroke","d","fileName","_jsxFileName","lineNumber","columnNumber","className","isOpen","onRequestClose","contentLabel","overlayClassName","closeModal","map","employee","id","name","_c","$RefreshReg$"],"sources":["C:/Users/Dhanush/Desktop/mern_application/frontend/src/pages/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport CreateEmployee from '../components/CreateEmployee';\r\nimport Search from '../components/Search';\r\n\r\nModal.setAppElement('#root'); // Assuming your root element has this ID\r\n\r\nconst EmployeeList = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchEmployees();\r\n    }, []);\r\n\r\n    const fetchEmployees = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/employees');\r\n            setEmployees(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching employees:', error);\r\n        }\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalIsOpen(false);\r\n        fetchEmployees(); // Refetch employees after closing the modal to update the list\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"fixed top-[8%] left-5\">\r\n                <button onClick={handleOpenModal} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full shadow-lg\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" class=\"w-6 h-6\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 12h14m-7-7v14\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div className='relative py-4 ml-[84%]'>\r\n                <Search />\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={handleCloseModal}\r\n                contentLabel=\"Create Employee\"\r\n                className=\"modal-content\"\r\n                overlayClassName=\"modal-overlay\"\r\n            >\r\n                <CreateEmployee closeModal={handleCloseModal} />\r\n            </Modal>\r\n            <table className=\"min-w-full table-auto\">\r\n                <thead className=\"bg-gray-800 text-white\">\r\n                    {/* Table headers */}\r\n                </thead>\r\n                <tbody>\r\n                    {employees.map((employee) => (\r\n                        <tr key={employee.id} className={employee.id % 2 === 0 ? \"bg-white\" : \"bg-gray-200\"}>\r\n                            <td className=\"border px-4 py-2\">{employee.id}</td>\r\n                            <td className=\"border px-4 py-2\">{employee.name}</td>\r\n                            {/* Other employee details */}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1CJ,KAAK,CAACK,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZc,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;MACnEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1BT,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3BV,cAAc,CAAC,KAAK,CAAC;IACrBG,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAKiB,KAAK,EAAC,uBAAuB;MAAAD,QAAA,eAC9BhB,OAAA;QAAQkB,OAAO,EAAEJ,eAAgB;QAACG,KAAK,EAAC,qFAAqF;QAAAD,QAAA,eACzHhB,OAAA;UAAKmB,KAAK,EAAC,4BAA4B;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAACC,MAAM,EAAC,cAAc;UAAC,gBAAa,GAAG;UAACL,KAAK,EAAC,SAAS;UAAAD,QAAA,eAC1HhB,OAAA;YAAM,kBAAe,OAAO;YAAC,mBAAgB,OAAO;YAACuB,CAAC,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACN3B,OAAA;MAAK4B,SAAS,EAAC,wBAAwB;MAAAZ,QAAA,eACnChB,OAAA,CAACF,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN3B,OAAA,CAACJ,KAAK;MACFiC,MAAM,EAAEzB,WAAY;MACpB0B,cAAc,EAAEf,gBAAiB;MACjCgB,YAAY,EAAC,iBAAiB;MAC9BH,SAAS,EAAC,eAAe;MACzBI,gBAAgB,EAAC,eAAe;MAAAhB,QAAA,eAEhChB,OAAA,CAACH,cAAc;QAACoC,UAAU,EAAElB;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACR3B,OAAA;MAAO4B,SAAS,EAAC,uBAAuB;MAAAZ,QAAA,gBACpChB,OAAA;QAAO4B,SAAS,EAAC;MAAwB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElC,CAAC,eACR3B,OAAA;QAAAgB,QAAA,EACKV,SAAS,CAAC4B,GAAG,CAAEC,QAAQ,iBACpBnC,OAAA;UAAsB4B,SAAS,EAAEO,QAAQ,CAACC,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,aAAc;UAAApB,QAAA,gBAChFhB,OAAA;YAAI4B,SAAS,EAAC,kBAAkB;YAAAZ,QAAA,EAAEmB,QAAQ,CAACC;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnD3B,OAAA;YAAI4B,SAAS,EAAC,kBAAkB;YAAAZ,QAAA,EAAEmB,QAAQ,CAACE;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFhDQ,QAAQ,CAACC,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACxB,EAAA,CA/DID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAiElB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}